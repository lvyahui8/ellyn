
name: Release

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        goos: [ linux, darwin, windows  ]
        goarch: [ amd64, arm64 ]
        include:
          - goos: windows
            ext : ".exe"
        exclude:
          - goos: windows
            goarch: arm64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.18'

      - name: goid_init
        run: chmod +x goid_init.sh && ./goid_init.sh

      - name: Build FE
        run: npm install vite -g --save && cd viewer && npm install --dependencies && npm run build

      - name: Update example
        run: go test -v -run TestExample ./ellyn_ast

      - name: Release Example And Ellyn
        run: cd example && go build -v -o example_app${{ matrix.ext }} . && cd ../ellyn_cmd && go build -v -o ellyn${{ matrix.ext }}
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0

      # 把二进制文件打包成压缩文件
      - name: Prepare Packaging
        run: cd example &&  zip -v ellyn-example-${{ matrix.goos }}-${{ matrix.goarch }}.zip example_app${{ matrix.ext }} && cd ../ellyn_cmd && zip -v ellyn-${{ matrix.goos }}-${{ matrix.goarch }}.zip ellyn{{ matrix.ext }}

      - name: Upload Example Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ellyn-example-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          path: example/ellyn-example-${{ matrix.goos }}-${{ matrix.goarch }}.zip

      - name: Upload Ellyn Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ellyn-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          path: ellyn_cmd/ellyn-${{ matrix.goos }}-${{ matrix.goarch }}.zip

      # 发布release版本
      - name: Release version
        uses: ncipollo/release-action@v1
        #if: github.event_name == 'release'
        with:
          allowUpdates: true
          prerelease: false
          artifactErrorsFailBuild: true
          removeArtifacts: false
          replacesArtifacts: false
          artifacts: example/ellyn-example-${{ matrix.goos }}-${{ matrix.goarch }}.zip,ellyn_cmd/ellyn-${{ matrix.goos }}-${{ matrix.goarch }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}